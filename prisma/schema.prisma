generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum State {
  PENDING
  IN_PROGRESS
  FINISHED
  CANCELED
}

enum Action {
  SKIP
  REJECT
  MANUAL
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
  company   Company  @relation(fields: [companyId], references: [id])
  companyId Int      @default(1)
  clients   Client[]

  @@index([roleId])
  @@index([companyId])
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Company {
  id                      Int                      @id @default(autoincrement())
  name                    String                   @unique
  users                   User[]
  company_characteristics Company_characteristic[]
  company_indicators      Company_indicator[]
}

model Company_characteristic {
  id               Int            @id @default(autoincrement())
  company          Company        @relation(fields: [companyId], references: [id])
  companyId        Int
  characteristic   Characteristic @relation(fields: [characteristicId], references: [id])
  characteristicId Int

  @@index([characteristicId])
  @@index([companyId])
}

model Company_indicator {
  id          Int       @id @default(autoincrement())
  company     Company   @relation(fields: [companyId], references: [id])
  companyId   Int
  indicator   Indicator @relation(fields: [indicatorId], references: [id])
  indicatorId Int

  @@index([companyId])
  @@index([indicatorId])
}

model Client {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  cellPhone String
  email     String
  owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   Int
  processes Process[]
  rfc       String

  @@index([ownerId])
}

model Source {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  order      Int
  indicators Indicator[]
}

model Indicator {
  id                  Int                 @id @default(autoincrement())
  name                String              @unique
  order               Int
  source              Source              @relation(fields: [sourceId], references: [id])
  sourceId            Int
  associated_function String
  characteristics     Characteristic[]
  steps               Step[]
  company_indicators  Company_indicator[]

  @@index([sourceId])
}

model Characteristic {
  id                      Int                      @id @default(autoincrement())
  name                    String                   @unique
  order                   Int
  value                   String
  action                  Action
  score                   Int
  indicators              Indicator[]
  company_characteristics Company_characteristic[]
}

model Process {
  id          Int    @id @default(autoincrement())
  name        String @unique @default(uuid())
  description String
  order       Int    @default(1)
  state       State
  client      Client @relation(fields: [clientId], references: [id])
  clientId    Int
  steps        Step[]
  uuid        String @unique
  @@index([clientId])
}

model Step {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  order       Int
  state       State @default(PENDING)
  process     Process   @relation(fields: [processId], references: [id])
  processId   Int
  indicatorId Int
  indicator   Indicator @relation(fields: [indicatorId], references: [id])
  result      Action?
  score       Int?

  @@index([processId])
  @@index([indicatorId])
}
